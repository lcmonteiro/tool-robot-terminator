#!/usr/bin/env python
###################################################################################################
###-                            {Terminator Remote Worker}                                      ##-#
###-Connect Robot framework with remote terminator                                              ##-#
###-Authors: Luis Monteiro                                                                     ##-#
###################################################################################################
# -----------------------------------------------------------------------------
# imports
# -----------------------------------------------------------------------------
# external
from robotworker.worker import option, arguments, command, get
from robotworker.worker import Worker    as Base

# internal
from .api               import Api
from .extensions.git    import REGISTER  as GIT_REGISTER

# #######################################################################################
# ---------------------------------------------------------------------------------------
# Worker
# ---------------------------------------------------------------------------------------
# #######################################################################################
@option('log' , default='terminator.log'   , help='Terminator Logger File')
@option('conf', default='configuration.yml', help='Terminator Configuration')
@option('port', default= 20000             , help='Terminator Port')
@option('host', default='127.0.0.1'        , help='Terminator Host')
@command('terminator')
class Worker(Base):
    # -------------------------------------------------------------------------
    # extensions
    # -------------------------------------------------------------------------
    @arguments(ext=get('ext'))
    def extender(self, ext):
        ext.append(GIT_REGISTER)
        super().extender(ext=ext)

#########################################################################################
# ---------------------------------------------------------------------------------------
# entry points
# ---------------------------------------------------------------------------------------
#########################################################################################
# -----------------------------------------------------------------------------
# main - function
# -----------------------------------------------------------------------------
def main(args=None, ext=[]):
    try :
        Worker(cls=Api, ext=ext)(args)
    except Exception as ex:
        print(str(ex))
    finally:
        exit(0)

# -----------------------------------------------------------------------------
# main - file
# -----------------------------------------------------------------------------
if __name__ == '__main__':
    main()

###################################################################################################
# -------------------------------------------------------------------------------------------------
# end
# -------------------------------------------------------------------------------------------------
###################################################################################################